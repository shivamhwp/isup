name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write

jobs:
  release:
    name: Release - ${{ matrix.platform.os }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: isup-linux-x86_64
            binary: isup
          - os: macos-latest
            target: x86_64-apple-darwin
            name: isup-darwin-x86_64
            binary: isup
          - os: macos-latest
            target: aarch64-apple-darwin
            name: isup-darwin-arm64
            binary: isup
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: isup-windows-x86_64.exe
            binary: isup.exe

    steps:
      - uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-dev pkg-config

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Generate SHA256 checksum
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release/
          if [ "${{ matrix.platform.os }}" = "windows-latest" ]; then
            # Create a proper SHA256 file format for Windows
            sha256sum ${{ matrix.platform.binary }} | awk '{print $1}' > ${{ matrix.platform.name }}.sha256
          else
            # Create a proper SHA256 file format for Unix
            shasum -a 256 ${{ matrix.platform.binary }} | awk '{print $1}' > ${{ matrix.platform.name }}.sha256
          fi

      - name: Prepare Release
        shell: bash
        run: |
          # Copy binary with proper permissions
          if [ "${{ matrix.platform.os }}" = "windows-latest" ]; then
            cp "target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary }}" "${{ matrix.platform.name }}"
          else
            cp "target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary }}" "${{ matrix.platform.name }}"
            # Ensure binary is executable
            chmod +x "${{ matrix.platform.name }}"
          fi

          # Copy checksum file
          cp "target/${{ matrix.platform.target }}/release/${{ matrix.platform.name }}.sha256" .

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ matrix.platform.name }},${{ matrix.platform.name }}.sha256"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifactContentType: application/octet-stream
          generateReleaseNotes: true
